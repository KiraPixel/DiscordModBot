import discord
from discord.ext import commands
from discord import Member
from discord.ext.commands import has_permissions, MissingPermissions
from discord.utils import get
from config import settings
import random
from asyncio import sleep
import sqlite3 as sq
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from apscheduler.triggers.cron import CronTrigger
from datetime import timedelta, datetime

intents = discord.Intents.all() #–ø–æ–ª—É—á–∞–º –ø—Ä–∞–≤–∞
bot = commands.Bot(command_prefix = settings['prefix'], intents = intents) #–ø—Ä–æ–≥—Ä—É–∂–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å

with sq.connect('DataBase.db') as con:
    cur = con.cursor()

    cur.execute("""CREATE TABLE IF NOT EXISTS warn (

        warn_id INTEGER PRIMARY KEY,
        warn_date TEXT NOT NULL,
        date_out TEXT NOT NULL,
        guild INT NOT NULL,
        user INT NOT NULL,
        reason TEXT NOT NULL,
        active BOOL DEFAULT TRUE

        )""")

    cur.execute("""CREATE TABLE IF NOT EXISTS giverole (

    	"id" INTEGER PRIMARY KEY,
    	"guild_id"	INTEGER,
    	"role_id"	INTEGER,
    	"who_give"	INTEGER,
		"have"	INTEGER

        )""")

    cur.execute("""CREATE TABLE IF NOT EXISTS whogivewarn (
    	"id_who_give"	INTEGER,
    	"guild_id"	INTEGER
        )""")

    con.commit()

@bot.event
async def on_ready():
          await bot.change_presence(status=discord.Status.online, activity=discord.Game("–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ Kira#6666"))

@bot.remove_command('help') #—É–¥–∞–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É help

@bot.command()
async def help(ctx): # –°–æ–∑–¥–∞—ë–º —Ñ—É–Ω–∫—Ü–∏—é –∏ –ø–µ—Ä–µ–¥–∞—ë–º –∞—Ä–≥—É–º–µ–Ω—Ç ctx.
	member = ctx.message.author
	print(f"{datetime.now()} {member} –≤—ã–∑–≤–∞–ª help") #–ü–†–ò–ù–¢–´
	embed = discord.Embed(colour=discord.Colour(0x417505))

	embed.set_footer(text="üëÅÔ∏è - –∞–¥–º–Ω–∏—Å–∫–∏–µ –∏–ª–∏ –∑–∞–∫—Ä—ã—Ç—ã–µ –∫–æ–º–∞–Ω–¥—ã")
	embed.add_field(name="giverole (user) (role)", value="–ü–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å")
	embed.add_field(name="removerole", value="–ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–Ω—è—Ç—å —Ä–æ–ª—å")
	embed.add_field(name="flip", value="–ü–æ–¥–±—Ä–æ—Å–∏—Ç—å –º–æ–Ω–µ—Ç–∫—É")
	embed.add_field(name="warnadd (user) (reason)", value="–í—ã–¥–∞—Ç—å –≤–∞—Ä–Ω")
	embed.add_field(name="warnremove (warn id)", value="–°–Ω—è—Ç—å –≤–∞—Ä–Ω")
	embed.add_field(name="warnlist (user)", value="–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –≤–∞—Ä–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
	embed.add_field(name="üëÅÔ∏è setting", value="–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤—ã–¥–∞—á–∏ —Ä–æ–ª–∏ –∏ –≤–∞—Ä–Ω–æ–≤")
	embed.add_field(name="üëÅÔ∏è say (—Ç–µ–∫—Å—Ç)", value="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞")
	embed.add_field(name="üëÅÔ∏è sayto (–∫–∞–Ω–∞–ª; —Ç–µ–∫—Å—Ç)", value="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∫–∞–Ω–∞–ª")
	embed.add_field(name="üëÅÔ∏è allowgiverole (role –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–¥–∞–≤–∞—Ç—å —Ä–æ–ª—å) (role –¥–ª—è –≤—ã–¥–∞—á–∏) (0 –∏–ª–∏ 1)", value="–†–∞–∑—Ä–µ—à–∏—Ç—å –≤—ã–¥–∞—á—É —Ä–æ–ª–µ–π\n 0 - –º–æ–∂–Ω–æ –Ω–µ –∏–º–µ—Ç—å —Ä–æ–ª—å –¥–ª—è –µ—ë –≤—ã–¥–∞—á–∏ \n 1 - —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–º–µ—Ç—å —Ä–æ–ª—å –¥–ª—è –µ—ë –≤—ã–¥–∞—á–∏)")
	embed.add_field(name="üëÅÔ∏è delgiverole  (role –∫–æ—Ç–æ—Ä–∞—è –≤—ã–¥–∞–µ—Ç —Ä–æ–ª—å) (role –¥–ª—è –≤—ã–¥–∞—á–∏)", value="–ó–∞–±–∏—Ä–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Ç—å –≤—ã–¥–∞–≤–∞—Ç—å —Ä–æ–ª–∏")
	embed.add_field(name="üëÅÔ∏è allowgivewarn (role) ", value="–†–∞–∑—Ä–µ—à–∏—Ç—å –≤—ã–¥–∞—á—É –≤–∞—Ä–Ω–∞ —ç—Ç–æ–π —Ä–æ–ª–∏")
	embed.add_field(name="üëÅÔ∏è delgivewarn (role) ", value="–ó–∞–ø—Ä–µ—Ç–∏—Ç—å –≤—ã–¥–∞—á—É –≤–∞—Ä–Ω–∞ —ç—Ç–æ–π —Ä–æ–ª–∏")
	await ctx.channel.send(embed=embed)

@bot.command()
async def setting(ctx):
	print(f"{datetime.now()} {ctx.message.author} –≤—ã–∑–≤–∞–ª setting") #–ü–†–ò–ù–¢–´
	cur.execute(f"SELECT role_id, who_give, have FROM giverole WHERE guild_id = {ctx.guild.id}")
	record = cur.fetchall()
	embed = discord.Embed(title = f"–í—ã–¥–∞—á–∞ —Ä–æ–ª–µ–π:", colour=discord.Colour(0x417505))
	for i in record:
	    role_id = discord.utils.get(ctx.guild.roles, id = int(f'{i[0]}'))
	    if role_id == None:
	    	role_id = f"–£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–æ–ª—å ID: {i[0]}"
	    role_whogive = discord.utils.get(ctx.guild.roles, id = int(f'{i[1]}'))
	    if role_whogive == None:
	    	role_whogive = f"–£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–æ–ª—å ID: {i[1]}"
	    role_have = int(f'{i[2]}')
	    if role_have == 0:
	        active = "‚ùå"
	    else:
	        active = "‚úÖ"
	    embed.add_field(name=f"–†–æ–ª—å: *{role_whogive}*", value=f" **–ú–æ–∂–µ—Ç –≤—ã–¥–∞—Ç—å:** {role_id}\n**–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ:** {active} ", inline=False)
	await ctx.channel.send(embed=embed)

	cur.execute(f"SELECT id_who_give FROM whogivewarn WHERE guild_id = {ctx.guild.id}")
	record = cur.fetchall()
	embed = discord.Embed(title = f"–í—ã–¥–∞—á–∞ –≤–∞—Ä–Ω–æ–≤:", colour=discord.Colour(0x417505))
	for i in record:
	    role_id = discord.utils.get(ctx.guild.roles, id = int(f'{i[0]}'))
	    if role_id == None:
	    	role_id = f"–£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–æ–ª—å ID: {i[0]}"
	    embed.add_field(name=f"–†–æ–ª—å:", value=f"{role_id}", inline=False)
	await ctx.channel.send(embed=embed)

@bot.command()
async def giverole(ctx, opponent: discord.Member, squad_name: discord.Role):
	print(f"{datetime.now()} {ctx.message.author} –ø—ã—Ç–∞–µ—Ç—Å—è –≤—ã–¥–∞—Ç—å —Ä–æ–ª—å {squad_name} –¥–ª—è {opponent}") #–ü–†–ò–ù–¢–´
	cur.execute(f"SELECT role_id, who_give, have FROM giverole WHERE role_id = {squad_name.id} AND guild_id = {ctx.guild.id}")
	record = cur.fetchall()
	if len(record) == 0:
		await ctx.send("–î–ª—è —ç—Ç–æ–π —Ä–æ–ª–∏ - –Ω–µ –±—ã–ª–∏ –∑–∞–¥–∞–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤—ã–¥–∞—á–∏")
	role_id = int(f'{record[0][0]}')
	role_whogive = discord.utils.get(ctx.guild.roles, id = int(f'{record[0][1]}'))
	role_have = int(f'{record[0][2]}')
	role = discord.utils.get(ctx.guild.roles, id=role_id)

	if role_whogive not in ctx.message.author.roles: 
		await ctx.send("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –≤—ã–¥–∞–≤–∞—Ç—å –¥–∞–Ω–Ω—É—é —Ä–æ–ª—å")
		return
	if role_have == 1 and role not in ctx.message.author.roles:
		await ctx.send("–ß—Ç–æ –±—ã –≤—ã–¥–∞—Ç—å —ç—Ç—É —Ä–æ–ª—å, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –µ—ë")
		return

	await opponent.add_roles(role)
	await ctx.send(f"–í—ã –≤—ã–¥–∞–ª–∏ —Ä–æ–ª—å {role} {opponent}")



@bot.command()
async def removerole(ctx, opponent: discord.Member, squad_name: discord.Role):
	print(f"{datetime.now()} {ctx.message.author} –ø—ã—Ç–∞–µ—Ç—Å—è –∑–∞–±—Ä–∞—Ç—å —Ä–æ–ª—å {squad_name} —É {opponent}") #–ü–†–ò–ù–¢–´
	cur.execute(f"SELECT role_id, who_give, have FROM giverole WHERE role_id = {squad_name.id} AND guild_id = {ctx.guild.id}")
	record = cur.fetchall()
	if len(record) == 0:
		await ctx.send("–î–ª—è —ç—Ç–æ–π —Ä–æ–ª–∏ - –Ω–µ –±—ã–ª–∏ –∑–∞–¥–∞–Ω—ã —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è –≤—ã–¥–∞—á–∏")

	role_id = int(f'{record[0][0]}')
	role_whogive = discord.utils.get(ctx.guild.roles, id = int(f'{record[0][1]}'))
	role_have = int(f'{record[0][2]}')
	role = discord.utils.get(ctx.guild.roles, id=role_id)

	if role_whogive not in ctx.message.author.roles: 
		await ctx.send("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∏—Ä–∞—Ç—å –¥–∞–Ω–Ω—É—é —Ä–æ–ª—å")
		return

	if role_have == 1 and role not in ctx.message.author.roles:
		await ctx.send("–ß—Ç–æ –±—ã –∑–∞–±—Ä–∞—Ç—å —ç—Ç—É —Ä–æ–ª—å, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –∏–º–µ—Ç—å –µ—ë")
		return

	await opponent.remove_roles(role)
	await ctx.send(f"–í—ã –∑–∞–±—Ä–∞–ª–∏ —Ä–æ–ª—å {role} —É {opponent}")


@bot.command()
@has_permissions(administrator = True)
async def say(ctx, *, text):
	await ctx.message.delete()
	await ctx.send(text)


@bot.command()
@has_permissions(administrator = True)
async def sayto(ctx, channel:discord.TextChannel, *, text):
    await ctx.message.delete()
    await channel.send(text)


@bot.command()
async def flip(ctx):
    print(ctx.message.author, "flip")
    variable = [
        "–í—ã–ø–∞–ª: –æ—Ä–µ–ª",
        "–í—ã–ø–∞–ª–∞: —Ä–µ—à–∫–∞",]
    await ctx.send("–í—ã –ø–æ–¥–±—Ä–æ—Å–∏–ª–∏ –º–æ–Ω–µ—Ç–∫—É")
    await ctx.send(random.choice(variable))


@bot.command()
async def warnadd(ctx, opponent: discord.Member, warnreason: str):
	member = ctx.message.author
	print(f"{datetime.now()} {member} –≤—ã–∑–≤–∞–ª warnadd") #–ü–†–ò–ù–¢–´
	cur.execute(f"SELECT id_who_give FROM whogivewarn WHERE guild_id = {ctx.guild.id}")
	record = cur.fetchall()
	if len(record) == 0:
		await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤, –¥–ª—è –≤—ã–¥–∞—á–∏ –≤–∞—Ä–Ω–æ–≤")
		return
	warn_date = datetime.now().date()
	date_end = warn_date + timedelta(+7)
	cur.execute(f"INSERT INTO warn (warn_date, date_out, guild, user, reason) VALUES('{warn_date}', '{date_end}', {ctx.guild.id}, {opponent.id}, '{warnreason}')")
	con.commit()
	print(record)


@bot.command()
async def warnlist(ctx, opponent: discord.Member):
    searchuser = opponent.id
    guild = ctx.guild.id
    cur.execute(f"SELECT * FROM warn user WHERE(user = {searchuser} AND guild = {guild})")
    record = cur.fetchall()
    if len(record) == 0:
        await ctx.send(f"–£ –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç—É –≤–∞—Ä–Ω–æ–≤")
        return
    embed = discord.Embed(title = f"–í–∞—Ä–Ω—ã {opponent}", colour=discord.Colour(0x417505))
    for i in record:
        idwarn = i[0]
        date = i[1]
        reason = i[5]
        active = i[6]
        if active == 1:
            active = "–ê–∫—Ç–∏–≤–Ω—ã–π"
        else:
            active = "–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–π"
        embed.add_field(name=f"ID {idwarn} - {active}", value=f"–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏: {date} | –ü—Ä–∏—á–∏–Ω–∞: {reason} ", inline=False)
    await ctx.channel.send(embed=embed)



@bot.command()
async def warnremove(ctx, warnid: str):
	cur.execute(f"SELECT id_who_give FROM whogivewarn WHERE guild_id = {ctx.guild.id}")
	record = cur.fetchall()
	if len(record) == 0:
		await ctx.send("–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤, –¥–ª—è –≤—ã–¥–∞—á–∏ –≤–∞—Ä–Ω–æ–≤")
		return
	cur.execute(f"UPDATE warn SET active = 0 WHERE warn_id = '{warnid}' AND active = 1")
	con.commit()
	if cur.rowcount < 1:
	    await ctx.send(f"–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≤–∞—Ä–Ω–∞ —Å ID: {warnid}")
	    return
	await ctx.send(f"–í—ã —Å–Ω—è–ª–∏ –≤–∞—Ä–Ω —Å –Ω–æ–º–µ—Ä–æ–º ID: {warnid}")
	

@bot.command()
@has_permissions(administrator = True)
async def allowgivewarn(ctx, role_id: discord.Role):
	cur.execute(f"INSERT INTO whogivewarn (guild_id, id_who_give) VALUES({ctx.guild.id}, {role_id.id})")
	con.commit()

@bot.command()
@has_permissions(administrator = True)
async def delgivewarn(ctx, role_id: discord.Role):
	cur.execute(f"UPDATE whogivewarn SET id_who_give = 0, guild_id = 0 WHERE id_who_give = {role_id.id}")
	con.commit()

@bot.command()
@has_permissions(administrator = True)
async def allowgiverole (ctx, who_give: discord.Role, role_id: discord.Role, have: int):
	if have != (0 or 1):
		await ctx.send(f"**–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä - –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Ä–∞–≤–µ–Ω 0 –∏–ª–∏ 1**\n 0 - –º–æ–∂–Ω–æ –Ω–µ –∏–º–µ—Ç—å —Ä–æ–ª—å –¥–ª—è –µ—ë –≤—ã–¥–∞—á–∏ \n 1 - —Ç—Ä–µ–±—É–µ—Ç—Å—è –∏–º–µ—Ç—å —Ä–æ–ª—å –¥–ª—è –µ—ë –≤—ã–¥–∞—á–∏")
		return
	cur.execute(f"INSERT INTO giverole (guild_id, role_id, who_give, have) VALUES({ctx.guild.id}, {role_id.id}, {who_give.id}, {have})")
	con.commit()

@bot.command()
@has_permissions(administrator = True)
async def delgiverole(ctx, who_give: discord.Role, role_id: discord.Role ):
	cur.execute(f"UPDATE giverole SET guild_id = 0 WHERE who_give = {who_give.id} AND role_id = {role_id.id}")
	con.commit()

async def func():
	mydate = datetime.now().date()
	cur.execute(f"SELECT * FROM warn warn_id WHERE( date_out <= '{mydate}' IS NOT active = 0)")
	record = cur.fetchall()
	if len(record) >= 1:
		cur.execute(f"UPDATE warn SET active = 0 WHERE( date_out <= '{mydate}' IS NOT active = 0)")
		print(f"–Ø —Å–Ω—è–ª –≤–∞—Ä–Ω—ã: {len(record)}—à—Ç.")
		con.commit()
	else:
		print("–°–µ–≥–æ–¥–Ω—è —è –Ω–µ —Å–Ω—è–ª –≤–∞—Ä–Ω—ã")

@bot.event
async def on_ready():
    print("Ready")

    scheduler = AsyncIOScheduler()
    scheduler.add_job(func, trigger='cron', hour='00', minute='00')
    scheduler.start()


@bot.event
async def on_message(message):
    if message.author == bot.user:
        return
    else:
        if bot.user in message.mentions:
            await message.channel.send(f"–ú–æ–π –ø—Ä–µ—Ñ–∏–∫—Å: ``{str(settings['prefix'])}``\n–ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏? –ü—Ä–æ–ø–∏—à–∏: ``{str(settings['prefix'])}help``")
    await bot.process_commands(message)


print ("BOT START")
bot.run(settings['token']) #–±–µ—Ä–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞ –∏ —Å—Ç–∞—Ä—Ç—É–µ–º